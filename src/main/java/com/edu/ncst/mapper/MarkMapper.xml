<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.ncst.mapper.MarkMapper">
    <resultMap id="BaseResultMap" type="com.edu.ncst.model.Mark">
        <id column="markId" jdbcType="INTEGER" property="markid" />
        <result column="userId" jdbcType="INTEGER" property="userid" />
        <result column="bookId" jdbcType="INTEGER" property="bookid" />
        <result column="markTime" jdbcType="TIMESTAMP" property="marktime" />
    </resultMap>
    <sql id="Base_Column_List">
        markId, userId, bookId, markTime
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from mark
        where markId = #{markid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from mark
        where markId = #{markid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.edu.ncst.model.Mark">
        insert into mark (markId, userId, bookId,markTime)
        values (#{markid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER},
                #{marktime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.edu.ncst.model.Mark">
        insert into mark
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="markid != null">
                markId,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="bookid != null">
                bookId,
            </if>
            <if test="marktime != null">
                markTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="markid != null">
                #{markid,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="bookid != null">
                #{bookid,jdbcType=INTEGER},
            </if>
            <if test="marktime != null">
                #{marktime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.edu.ncst.model.Mark">
        update mark
        <set>
            <if test="userid != null">
                userId = #{userid,jdbcType=INTEGER},
            </if>
            <if test="bookid != null">
                bookId = #{bookid,jdbcType=INTEGER},
            </if>
            <if test="marktime != null">
                borrowTime = #{marktime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where markId = #{markid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.edu.ncst.model.Mark">
        update mark
        set userId = #{userid,jdbcType=INTEGER},
            bookId = #{bookid,jdbcType=INTEGER},
            markTime = #{marktime,jdbcType=TIMESTAMP}
        where markId = #{markid,jdbcType=INTEGER}
    </update>
    <select id="selectAllByLimit" resultMap="BaseResultMap">
        select markId, userId, bookId, markTime,
               (select userName from user where mark.userId = user.userId) userName,
               (select bookName from book_info where mark.bookId = book_info.bookId) bookName
        from mark
                 limit #{begin}, #{size}
    </select>
    <select id="selectCount" resultType="int">
        select count(*) from mark
    </select>
    <select id="selectCountBySearch" resultType="int">
        select count(*)
        from mark, user, book_info
        where mark.userId = user.userId and mark.bookId = book_info.bookId
        <if test="bookId != null and bookId != '' ">
            and mark.bookId like concat('%',#{bookId},'%')
        </if>
        <if test="username != null and username != '' ">
            and userName like concat('%',#{username},'%')
        </if>
        <if test="bookname != null and bookname != '' ">
            and bookName like concat('%',#{bookname},'%')
        </if>
        <if test="userid != null and userid != '' ">
            and mark.userId = #{userid}
        </if>
    </select>
    <select id="selectBySearch" resultMap="BaseResultMap">
        select markId, mark.userId, mark.bookId, markTime, userName, bookName
        from mark, user, book_info
        where mark.userId = user.userId and mark.bookId = book_info.bookId
        <if test="username != null and username != '' ">
            and userName like concat('%',#{username},'%')
        </if>
        <if test="bookname != null and bookname != '' ">
            and bookName like concat('%',#{bookname},'%')
        </if>
        <if test="userid != null and userid != '' ">
            and mark.userId = #{userid}
        </if>
        limit #{begin}, #{size}
    </select>
    <select id="selectCountByReader" resultType="int">
        select count(*) from mark
        where userId = #{userid}
    </select>
    <select id="selectAllByLimitByReader" resultMap="BaseResultMap">
        select markId, userId, bookId, markTime,
               (select userName from user where mark.userId = user.userId) userName,
               (select bookName from book_info where mark.bookId = book_info.bookId) bookName
        from mark
        where userId = #{userid}
            limit #{begin}, #{size}
    </select>
</mapper>